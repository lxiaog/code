<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--    配置SQLSessionFactoryBean-->
    <bean id="sqlSessionFactoryBean"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="hikariDataSource"/>
        <!--        mybatis配置文件 -->
        <!--        <property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <!--        对应实体类包-->
        <property name="typeAliasesPackage"
                  value="com.atguigu.atcrowdfunding.entity"/>
        <!--        mapper.xml映射文件-->
        <property name="mapperLocations"
                  value="classpath*:com/atguigu/atcrowdfunding/mapper/*Mapper.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <!--<property name="properties">-->
                        <!--&lt;!&ndash;使用下面的方式配置参数，一行配置一个 &ndash;&gt;-->
                        <!--<value>-->
                            <!--params=value1-->
                        <!--</value>-->
                    <!--</property>-->
                </bean>
            </array>
        </property>
    </bean>
    <!--    配置dao扫描器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
        <property name="basePackage" value="com.atguigu.atcrowdfunding.dao"/>
    </bean>
    <!--    可以配置批量处理数据的sqlSession执行器-->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <!--        构造方法传参 设置sql SessionFactoryBean-->
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
        <!--        构造方法传参  设置批量执行器-->
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>
    <!--    配置事务管理器-->
    <bean id="mybatisTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="hikariDataSource"/>
    </bean>
    <!--在方法上批量加载事务-->
    <tx:advice id="transactionAdvice" transaction-manager="mybatisTransactionManager">
        <tx:attributes>
            <!--使用数据库默认的隔离级别，可重复读-->
            <!--rollback-for 回滚策略，默认是运行期异常，改变默认回滚策略-->
            <tx:method name="*" propagation="REQUIRED"
                       isolation="DEFAULT"
                       rollback-for="java.lang.Exception"/>
            <!--查询方法加只读事务-->
            <tx:method name="query*" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <!--切面配置 service中每个方法-->
    <aop:config>
        <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* com.atguigu..*Service.*(..))"/>
    </aop:config>
    <!--    开启事务注解功能-->
    <tx:annotation-driven transaction-manager="mybatisTransactionManager"
                          proxy-target-class="false"/>
</beans>