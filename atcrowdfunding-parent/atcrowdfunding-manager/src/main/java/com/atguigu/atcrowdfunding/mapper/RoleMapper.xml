<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.atcrowdfunding.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.entity.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, role_name, create_date, update_date
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tbl_role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.atguigu.atcrowdfunding.entity.Role">
    insert into tbl_role (id, role_name, create_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.atguigu.atcrowdfunding.entity.Role">
        insert into tbl_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null and roleName !=''">
                role_name,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleName != null and roleName !=''">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.atcrowdfunding.entity.Role">
        update tbl_role
        <set>
            <if test="roleName != null and roleName !=''">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.atguigu.atcrowdfunding.entity.Role">
    update tbl_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="queryList" parameterType="com.atguigu.atcrowdfunding.entity.Role" resultMap="BaseResultMap">
        <if test="roleName != null and roleName != ''">
            <bind name="_roleName" value="'%'+roleName+'%'"/>
        </if>
        select
        <include refid="Base_Column_List"/>
        from tbl_role
        <where>
            <if test="roleName != null and roleName != ''">
                and role_name like #{_roleName}
            </if>
        </where>
        order by update_date desc
    </select>

    <select id="queryUnAssionRolesByUserId" resultMap="BaseResultMap">
        SELECT
            tr.id,
            tr.role_name,
            tr.create_date,
            tr.update_date
        FROM
            tbl_role tr
            LEFT JOIN tbl_join_user_role jur ON jur.role_id = tr.id
        WHERE
          (jur.user_id IS NULL OR jur.user_id <![CDATA[<>]]> #{userId})
    </select>
</mapper>