<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.demo.repository.dao.UserMapper">
  <resultMap id="BaseResultMap" type="org.example.demo.repository.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="username" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_date, email, name, password, update_date, username
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" databaseId="orcale" parameterType="org.example.demo.repository.entity.User">
    insert into tbl_user (id, create_date, email, 
      name, password, update_date, 
      username)
    values (#{id,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{email,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{username,jdbcType=VARCHAR})
  </insert>
  <!--useGeneratedKeys 使用自增主键-->
  <!--keyProperty 设置增值主键的值赋给主键id-->
  <insert id="insertSelective"
          useGeneratedKeys="true"
          keyProperty="id"
          parameterType="org.example.demo.repository.entity.User">
    insert into tbl_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="username != null">
        username,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.demo.repository.entity.User">
    update tbl_user
    <set>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.demo.repository.entity.User">
    update tbl_user
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      username = #{username,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>